name: Build and Push Docker Image

# Déclenche le workflow sur les push vers la branche 'main' et les tags qui commencent par 'v*'.
on:
  push:
    branches:
      - 'main'
    tags:
      - "v*"
  pull_request:
    branches:
      - 'main'
      
env:
  CACHE_IMAGE: ghcr.io/firms-gta/tunaatlas_pie_map_shiny_CWP_database-cache
  DOCKER_BUILDKIT: 1
  RENV_PATHS_ROOT: ~/.cache/R/renv

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      # Étape de checkout du code source
      - name: Checkout code
        uses: actions/checkout@v3

      # Récupère les versions de l'OS et de R
      # - name: Get R and OS version
      #   id: get-version
      #   run: |
      #     echo "os-version=$(lsb_release -d | cut -f2)" >> $GITHUB_ENV
      #     echo "r-version=$(R --version | head -n 1)" >> $GITHUB_ENV

      # # Cache les packages Renv pour accélérer les builds futurs
      # - name: Cache Renv packages
      #   id: cache-renv
      #   uses: actions/cache@v3
      #   with:
      #     path: ${{ env.RENV_PATHS_ROOT }}
      #     key: ${{ runner.os }}-renv-${{ hashFiles('renv.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-renv-

      # # Installe et active renv pour restaurer les packages R
      # - name: Install and activate renv
      #   run: |
      #     Rscript -e "install.packages('renv', repos='https://cran.r-project.org')"
      #     Rscript -e "renv::restore()"

      # Se connecte au registre Docker si l'événement est un tag
      - name: Login to image repository
        if: github.ref_type == 'tag'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      # Crée et initialise le builder Docker
      - name: Create and bootstrap builder
        run: |
          docker buildx create --use --name builder
          docker buildx inspect builder --bootstrap
          
      # Construit et pousse conditionnellement l'image Docker
      - name: Build and conditionally push Docker image
        run: |
          docker buildx build \
            --cache-from type=registry,ref=$CACHE_IMAGE:latest \
            --cache-to type=registry,ref=$CACHE_IMAGE:latest,mode=max \
            --tag ghcr.io/firms-gta/tunaatlas_pie_map_shiny_CWP_database:latest \
            --build-arg RENV_PATHS_ROOT=${{ env.RENV_PATHS_ROOT }} \
            --label org.opencontainers.image.url=${{ github.repository }} \
            --label org.opencontainers.image.source=${{ github.repository }} \
            --label org.opencontainers.image.title=GlobalTunaAtlasExplorer \
            --label org.opencontainers.image.description="Interactive Shiny application for Tuna Atlas data visualization" \
            --label org.opencontainers.image.vendor=IRD \
            --label org.opencontainers.image.author="Bastien Grasset <bastien.grasset@ird.fr>" \
            --label org.opencontainers.image.revision=${{ github.sha }} \
            $(if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then echo "--push --tag ghcr.io/firms-gta/tunaatlas_pie_map_shiny_CWP_database:${GITHUB_REF}"; fi)
